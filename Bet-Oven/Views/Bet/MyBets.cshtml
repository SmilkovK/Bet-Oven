@model IEnumerable<SportDomain.models.BetConfirm>
@{
    ViewBag.Title = "My Bets";
}

<div class="container mt-4">
    <h2 class="mb-3">My Bets</h2>
    <p class="fs-5">Current Balance: <strong>$@ViewBag.CurrentBalance</strong></p>

    <div class="row">
        @foreach (var betConfirm in Model.OrderByDescending(bc => bc.PlacedAt))
        {
            <div class="col-md-6 mb-4">
                <div class="card shadow border-0 rounded-4 h-100">
                    <div class="card-body">
                        <h5 class="card-title mb-3">
                            Placed at: @betConfirm.PlacedAt.ToLocalTime().ToString("g")
                        </h5>

                        @foreach (var bet in betConfirm.Bets)
                        {
                            string status = string.IsNullOrEmpty(bet.Status) ? "Pending" : bet.Status;
                            string badgeClass = status switch
                            {
                                "Won" => "bg-success",
                                "Lost" => "bg-danger",
                                "Live" => "bg-info",
                                _ => "bg-warning"
                            };

                            string matchInfo = bet.HomeGoals.HasValue && bet.AwayGoals.HasValue
                                               ? $"{bet.HomeGoals} : {bet.AwayGoals}"
                                               : "vs";

                            string displayMessage = bet.FixtureId.HasValue switch
                            {
                                false => "Match info not available",
                                _ when status == "Pending" => "Match has not started",
                                _ when status == "Live" => $"Current Score: {matchInfo}",
                                _ when status == "Won" || status == "Lost" => $"Final Score: {matchInfo}",
                                _ => "Status unknown"
                            };

                            <div class="mb-2 p-2 border-bottom">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span>
                                        <span class="text-primary">@bet.HomeTeam</span> 
                                        <strong>@matchInfo</strong>
                                        <span class="text-danger">@bet.AwayTeam</span>
                                        @if (bet.FixtureId.HasValue)
                                        {
                                            <small class="text-muted"> (Fixture ID: @bet.FixtureId)</small>
                                        }
                                    </span>
                                    <span class="badge bet-status @badgeClass">
                                        @status
                                    </span>
                                </div>
                                <small class="d-block">
                                    <strong>Type:</strong> @bet.BetType, 
                                    <strong>Odds:</strong> @bet.Odds
                                    <span class="text-info"> - @displayMessage</span>
                                </small>
                            </div>
                        }
                        <hr />
                        <div class="d-flex justify-content-between">
                            <strong>Stake:</strong> $@betConfirm.Bets.FirstOrDefault()?.Stake
                            <strong>Potential Win:</strong> $@((int)betConfirm.Bets.FirstOrDefault()?.PotentialWin)
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
