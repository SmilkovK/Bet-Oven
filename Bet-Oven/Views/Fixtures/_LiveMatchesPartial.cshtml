@model List<SportDomain.models.Fixture>
@{
    ViewData["Title"] = "Live Football Matches";
}

<link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;600;700&display=swap" rel="stylesheet">

<style>
    :root {
        --primary-color: #2A2D34;
        --secondary-color: #009DDC;
        --accent-color: #F26430;
        --live-color: #dc3545;
        --text-dark: #2A2D34;
        --text-light: #6c757d;
    }

    body {
        background: #f8f9fa;
        font-family: 'Roboto Condensed', sans-serif;
    }

    .league-section {
        margin-bottom: 2rem;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        overflow: hidden;
    }

    .league-header {
        background: var(--primary-color);
        color: white;
        padding: 1rem 1.5rem;
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        align-items: center;
        gap: 1rem;
    }

    .league-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        justify-self: start;
    }

    .league-title {
        font-size: 1.3rem;
        font-weight: 700;
        margin: 0;
        letter-spacing: 0.5px;
    }

    .league-round {
        font-size: 1rem;
        font-weight: 600;
        color: white;
        text-transform: uppercase;
        text-align: center;
        white-space: nowrap;
        justify-self: center;
    }

    .league-country {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        justify-self: end;
    }

    .league-country img {
        height: 20px;
        width: auto;
    }

    .match-row {
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        align-items: center;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #f0f0f0;
        position: relative;
    }

    .team {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0.5rem 0;
    }

    .home-team {
        justify-content: flex-end;
        text-align: right;
    }

    .away-team {
        justify-content: flex-start;
    }

    .team-logo {
        height: 40px;
        width: 40px;
        border-radius: 8px;
        object-fit: contain;
        background: #f8f9fa;
        padding: 4px;
    }

    .team-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--text-dark);
        max-width: 160px;
    }

    .match-center {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.25rem;
        padding: 0 1.5rem;
    }

    .match-score {
        background: var(--secondary-color);
        color: white;
        padding: 8px 20px;
        border-radius: 25px;
        font-weight: 700;
        font-size: 1.4rem;
        min-width: 100px;
        text-align: center;
    }

    .match-status {
        font-size: 0.9rem;
        color: var(--text-light);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .match-date {
        font-size: 0.9rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .live-box {
        background: var(--live-color);
        color: white;
        font-weight: 700;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 0.85rem;
        position: absolute;
        top: 8px;
        right: 16px;
        animation: blink 1s infinite alternate;
    }

    @@keyframes blink {
        0% { opacity: 1; }
        50% { opacity: 0.5; }
        100% { opacity: 1; }
    }

    .match-details-btn {
        grid-column: 1 / -1;
        text-align: center;
        margin-top: 0.5rem;
    }

    .match-details-btn a {
        background: var(--accent-color);
        color: white;
        padding: 8px 16px;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 600;
    }

    .match-details-btn a:hover {
        opacity: 0.9;
    }
</style>

<div class="container py-4">
    @if (Model != null && Model.Any())
    {
        var groupedMatches = Model.GroupBy(m => m.League?.Name ?? "Other Matches");

        foreach (var leagueGroup in groupedMatches)
        {
            <div class="league-section">
                <div class="league-header">
                    <div class="league-info">
                        @if (!string.IsNullOrEmpty(leagueGroup.First().League?.Logo))
                        {
                            <img src="@leagueGroup.First().League.Logo" alt="League Logo" style="height: 35px; width: auto;" />
                        }
                        <h2 class="league-title">@leagueGroup.Key</h2>
                    </div>
                    @if (!string.IsNullOrEmpty(leagueGroup.First().League?.Round))
                    {
                        <div class="league-round">
                            <span>@leagueGroup.First().League.Round</span>
                        </div>
                    }
                    <div class="league-country">
                        @if (!string.IsNullOrEmpty(leagueGroup.First().League?.Flag))
                        {
                            <img src="@leagueGroup.First().League.Flag" alt="Country Flag" />
                        }
                        @if (!string.IsNullOrEmpty(leagueGroup.First().League?.Country))
                        {
                            <h4 style="margin: 0;"><b>@leagueGroup.First().League.Country</b></h4>
                        }
                    </div>
                </div>
                <div class="matches-list">
                    @foreach (var match in leagueGroup)
                    {
                        <div class="match-row">
                            @if (match.Status?.Short == "1H" || match.Status?.Short == "2H")
                            {
                                <div class="live-box">LIVE</div>
                            }
                            <div class="team home-team">
                                <span class="team-name">@match.Teams?.Home?.Name</span>
                                @if (!string.IsNullOrEmpty(match.Teams?.Home?.Logo))
                                {
                                    <img src="@match.Teams.Home.Logo" alt="Home Team Logo" class="team-logo" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/40" alt="Default Logo" class="team-logo" />
                                }
                            </div>
                            <div class="match-center">
                                <div class="match-score">
                                    @(match.Goals?.Home ?? 0)-@(match.Goals?.Away ?? 0)
                                </div>
                                <div class="match-status">
                                    @if ((match.Status?.Elapsed.HasValue == true) && (match.Status?.Short == "1H" || match.Status?.Short == "2H"))
                                    {
                                        @($"{match.Status.Long} ({match.Status.Elapsed}')")
                                    }
                                    else
                                    {
                                        @match.Status?.Long
                                    }
                                </div>
                                <div class="match-date">
                                    @* Uncomment and format date if needed: @match.Date?.ToString("yyyy-MM-dd HH:mm") *@
                                </div>
                            </div>
                            <div class="team away-team">
                                @if (!string.IsNullOrEmpty(match.Teams?.Away?.Logo))
                                {
                                    <img src="@match.Teams.Away.Logo" alt="Away Team Logo" class="team-logo" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/40" alt="Default Logo" class="team-logo" />
                                }
                                <span class="team-name">@match.Teams?.Away?.Name</span>
                            </div>
                            <div class="match-details-btn">
                                <a href="@Url.Action("MatchDetails", "Fixtures", new { fixtureId = match.Id })">View Stats</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-futbol fa-3x text-muted mb-3"></i>
            <h3 class="text-muted">No Live Matches</h3>
            <p class="text-muted">Check back later for live matches</p>
        </div>
    }
</div>
